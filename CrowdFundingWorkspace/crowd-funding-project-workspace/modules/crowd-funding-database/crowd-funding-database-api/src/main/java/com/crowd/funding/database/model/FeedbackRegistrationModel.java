/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.crowd.funding.database.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the FeedbackRegistration service. Represents a row in the &quot;cf_project_feedback_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.crowd.funding.database.model.impl.FeedbackRegistrationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.crowd.funding.database.model.impl.FeedbackRegistrationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see FeedbackRegistration
 * @see com.crowd.funding.database.model.impl.FeedbackRegistrationImpl
 * @see com.crowd.funding.database.model.impl.FeedbackRegistrationModelImpl
 * @generated
 */
@ProviderType
public interface FeedbackRegistrationModel extends BaseModel<FeedbackRegistration> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a feedback registration model instance should use the {@link FeedbackRegistration} interface instead.
	 */

	/**
	 * Returns the primary key of this feedback registration.
	 *
	 * @return the primary key of this feedback registration
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this feedback registration.
	 *
	 * @param primaryKey the primary key of this feedback registration
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this feedback registration.
	 *
	 * @return the uuid of this feedback registration
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this feedback registration.
	 *
	 * @param uuid the uuid of this feedback registration
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the project_feedback_id of this feedback registration.
	 *
	 * @return the project_feedback_id of this feedback registration
	 */
	public long getPROJECT_FEEDBACK_ID();

	/**
	 * Sets the project_feedback_id of this feedback registration.
	 *
	 * @param PROJECT_FEEDBACK_ID the project_feedback_id of this feedback registration
	 */
	public void setPROJECT_FEEDBACK_ID(long PROJECT_FEEDBACK_ID);

	/**
	 * Returns the project_id of this feedback registration.
	 *
	 * @return the project_id of this feedback registration
	 */
	public long getPROJECT_ID();

	/**
	 * Sets the project_id of this feedback registration.
	 *
	 * @param PROJECT_ID the project_id of this feedback registration
	 */
	public void setPROJECT_ID(long PROJECT_ID);

	/**
	 * Returns the feedback of this feedback registration.
	 *
	 * @return the feedback of this feedback registration
	 */
	@AutoEscape
	public String getFEEDBACK();

	/**
	 * Sets the feedback of this feedback registration.
	 *
	 * @param FEEDBACK the feedback of this feedback registration
	 */
	public void setFEEDBACK(String FEEDBACK);

	/**
	 * Returns the donor_user_id of this feedback registration.
	 *
	 * @return the donor_user_id of this feedback registration
	 */
	public long getDONOR_USER_ID();

	/**
	 * Sets the donor_user_id of this feedback registration.
	 *
	 * @param DONOR_USER_ID the donor_user_id of this feedback registration
	 */
	public void setDONOR_USER_ID(long DONOR_USER_ID);

	/**
	 * Returns the feedback_date of this feedback registration.
	 *
	 * @return the feedback_date of this feedback registration
	 */
	public Date getFEEDBACK_DATE();

	/**
	 * Sets the feedback_date of this feedback registration.
	 *
	 * @param FEEDBACK_DATE the feedback_date of this feedback registration
	 */
	public void setFEEDBACK_DATE(Date FEEDBACK_DATE);

	/**
	 * Returns the status of this feedback registration.
	 *
	 * @return the status of this feedback registration
	 */
	public int getSTATUS();

	/**
	 * Sets the status of this feedback registration.
	 *
	 * @param STATUS the status of this feedback registration
	 */
	public void setSTATUS(int STATUS);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(FeedbackRegistration feedbackRegistration);

	@Override
	public int hashCode();

	@Override
	public CacheModel<FeedbackRegistration> toCacheModel();

	@Override
	public FeedbackRegistration toEscapedModel();

	@Override
	public FeedbackRegistration toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}