/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.crowd.funding.database.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.sql.Blob;

import java.util.Date;

/**
 * The base model interface for the CandidateRegistration service. Represents a row in the &quot;cf_candidate_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.crowd.funding.database.model.impl.CandidateRegistrationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.crowd.funding.database.model.impl.CandidateRegistrationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CandidateRegistration
 * @see com.crowd.funding.database.model.impl.CandidateRegistrationImpl
 * @see com.crowd.funding.database.model.impl.CandidateRegistrationModelImpl
 * @generated
 */
@ProviderType
public interface CandidateRegistrationModel extends BaseModel<CandidateRegistration> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a candidate registration model instance should use the {@link CandidateRegistration} interface instead.
	 */

	/**
	 * Returns the primary key of this candidate registration.
	 *
	 * @return the primary key of this candidate registration
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this candidate registration.
	 *
	 * @param primaryKey the primary key of this candidate registration
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this candidate registration.
	 *
	 * @return the uuid of this candidate registration
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this candidate registration.
	 *
	 * @param uuid the uuid of this candidate registration
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the candidate_id of this candidate registration.
	 *
	 * @return the candidate_id of this candidate registration
	 */
	public long getCANDIDATE_ID();

	/**
	 * Sets the candidate_id of this candidate registration.
	 *
	 * @param CANDIDATE_ID the candidate_id of this candidate registration
	 */
	public void setCANDIDATE_ID(long CANDIDATE_ID);

	/**
	 * Returns the position_id of this candidate registration.
	 *
	 * @return the position_id of this candidate registration
	 */
	public long getPOSITION_ID();

	/**
	 * Sets the position_id of this candidate registration.
	 *
	 * @param POSITION_ID the position_id of this candidate registration
	 */
	public void setPOSITION_ID(long POSITION_ID);

	/**
	 * Returns the name of this candidate registration.
	 *
	 * @return the name of this candidate registration
	 */
	@AutoEscape
	public String getNAME();

	/**
	 * Sets the name of this candidate registration.
	 *
	 * @param NAME the name of this candidate registration
	 */
	public void setNAME(String NAME);

	/**
	 * Returns the email of this candidate registration.
	 *
	 * @return the email of this candidate registration
	 */
	@AutoEscape
	public String getEMAIL();

	/**
	 * Sets the email of this candidate registration.
	 *
	 * @param EMAIL the email of this candidate registration
	 */
	public void setEMAIL(String EMAIL);

	/**
	 * Returns the mobile_no of this candidate registration.
	 *
	 * @return the mobile_no of this candidate registration
	 */
	public long getMOBILE_NO();

	/**
	 * Sets the mobile_no of this candidate registration.
	 *
	 * @param MOBILE_NO the mobile_no of this candidate registration
	 */
	public void setMOBILE_NO(long MOBILE_NO);

	/**
	 * Returns the current_location of this candidate registration.
	 *
	 * @return the current_location of this candidate registration
	 */
	@AutoEscape
	public String getCURRENT_LOCATION();

	/**
	 * Sets the current_location of this candidate registration.
	 *
	 * @param CURRENT_LOCATION the current_location of this candidate registration
	 */
	public void setCURRENT_LOCATION(String CURRENT_LOCATION);

	/**
	 * Returns the experience of this candidate registration.
	 *
	 * @return the experience of this candidate registration
	 */
	@AutoEscape
	public String getEXPERIENCE();

	/**
	 * Sets the experience of this candidate registration.
	 *
	 * @param EXPERIENCE the experience of this candidate registration
	 */
	public void setEXPERIENCE(String EXPERIENCE);

	/**
	 * Returns the resume of this candidate registration.
	 *
	 * @return the resume of this candidate registration
	 */
	public Blob getRESUME();

	/**
	 * Sets the resume of this candidate registration.
	 *
	 * @param RESUME the resume of this candidate registration
	 */
	public void setRESUME(Blob RESUME);

	/**
	 * Returns the date of this candidate registration.
	 *
	 * @return the date of this candidate registration
	 */
	public Date getDATE();

	/**
	 * Sets the date of this candidate registration.
	 *
	 * @param DATE the date of this candidate registration
	 */
	public void setDATE(Date DATE);

	/**
	 * Returns the status of this candidate registration.
	 *
	 * @return the status of this candidate registration
	 */
	public int getSTATUS();

	/**
	 * Sets the status of this candidate registration.
	 *
	 * @param STATUS the status of this candidate registration
	 */
	public void setSTATUS(int STATUS);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(CandidateRegistration candidateRegistration);

	@Override
	public int hashCode();

	@Override
	public CacheModel<CandidateRegistration> toCacheModel();

	@Override
	public CandidateRegistration toEscapedModel();

	@Override
	public CandidateRegistration toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}