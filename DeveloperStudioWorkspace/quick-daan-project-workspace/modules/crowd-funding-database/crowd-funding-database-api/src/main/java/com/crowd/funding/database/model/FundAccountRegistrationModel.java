/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.crowd.funding.database.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the FundAccountRegistration service. Represents a row in the &quot;cf_project_account_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.crowd.funding.database.model.impl.FundAccountRegistrationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.crowd.funding.database.model.impl.FundAccountRegistrationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see FundAccountRegistration
 * @see com.crowd.funding.database.model.impl.FundAccountRegistrationImpl
 * @see com.crowd.funding.database.model.impl.FundAccountRegistrationModelImpl
 * @generated
 */
@ProviderType
public interface FundAccountRegistrationModel extends BaseModel<FundAccountRegistration> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a fund account registration model instance should use the {@link FundAccountRegistration} interface instead.
	 */

	/**
	 * Returns the primary key of this fund account registration.
	 *
	 * @return the primary key of this fund account registration
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this fund account registration.
	 *
	 * @param primaryKey the primary key of this fund account registration
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this fund account registration.
	 *
	 * @return the uuid of this fund account registration
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this fund account registration.
	 *
	 * @param uuid the uuid of this fund account registration
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the account_id of this fund account registration.
	 *
	 * @return the account_id of this fund account registration
	 */
	public long getACCOUNT_ID();

	/**
	 * Sets the account_id of this fund account registration.
	 *
	 * @param ACCOUNT_ID the account_id of this fund account registration
	 */
	public void setACCOUNT_ID(long ACCOUNT_ID);

	/**
	 * Returns the project_id of this fund account registration.
	 *
	 * @return the project_id of this fund account registration
	 */
	public long getPROJECT_ID();

	/**
	 * Sets the project_id of this fund account registration.
	 *
	 * @param PROJECT_ID the project_id of this fund account registration
	 */
	public void setPROJECT_ID(long PROJECT_ID);

	/**
	 * Returns the account_no of this fund account registration.
	 *
	 * @return the account_no of this fund account registration
	 */
	public long getACCOUNT_NO();

	/**
	 * Sets the account_no of this fund account registration.
	 *
	 * @param ACCOUNT_NO the account_no of this fund account registration
	 */
	public void setACCOUNT_NO(long ACCOUNT_NO);

	/**
	 * Returns the account_holder_name of this fund account registration.
	 *
	 * @return the account_holder_name of this fund account registration
	 */
	@AutoEscape
	public String getACCOUNT_HOLDER_NAME();

	/**
	 * Sets the account_holder_name of this fund account registration.
	 *
	 * @param ACCOUNT_HOLDER_NAME the account_holder_name of this fund account registration
	 */
	public void setACCOUNT_HOLDER_NAME(String ACCOUNT_HOLDER_NAME);

	/**
	 * Returns the ifsc_code of this fund account registration.
	 *
	 * @return the ifsc_code of this fund account registration
	 */
	@AutoEscape
	public String getIFSC_CODE();

	/**
	 * Sets the ifsc_code of this fund account registration.
	 *
	 * @param IFSC_CODE the ifsc_code of this fund account registration
	 */
	public void setIFSC_CODE(String IFSC_CODE);

	/**
	 * Returns the upi_no of this fund account registration.
	 *
	 * @return the upi_no of this fund account registration
	 */
	@AutoEscape
	public String getUPI_NO();

	/**
	 * Sets the upi_no of this fund account registration.
	 *
	 * @param UPI_NO the upi_no of this fund account registration
	 */
	public void setUPI_NO(String UPI_NO);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(FundAccountRegistration fundAccountRegistration);

	@Override
	public int hashCode();

	@Override
	public CacheModel<FundAccountRegistration> toCacheModel();

	@Override
	public FundAccountRegistration toEscapedModel();

	@Override
	public FundAccountRegistration toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}