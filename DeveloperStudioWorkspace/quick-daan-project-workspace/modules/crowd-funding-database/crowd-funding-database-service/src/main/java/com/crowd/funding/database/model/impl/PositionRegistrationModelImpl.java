/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.crowd.funding.database.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.crowd.funding.database.model.PositionRegistration;
import com.crowd.funding.database.model.PositionRegistrationModel;
import com.crowd.funding.database.model.PositionRegistrationSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the PositionRegistration service. Represents a row in the &quot;cf_position_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link PositionRegistrationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PositionRegistrationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PositionRegistrationImpl
 * @see PositionRegistration
 * @see PositionRegistrationModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class PositionRegistrationModelImpl extends BaseModelImpl<PositionRegistration>
	implements PositionRegistrationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a position registration model instance should use the {@link PositionRegistration} interface instead.
	 */
	public static final String TABLE_NAME = "cf_position_details";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "POSITION_ID", Types.BIGINT },
			{ "ADVERTISMENT_NUM", Types.VARCHAR },
			{ "POSITION_NAME", Types.VARCHAR },
			{ "DESCRIPTION", Types.VARCHAR },
			{ "EXPERIENCE_LEVEL", Types.VARCHAR },
			{ "SALARY", Types.VARCHAR },
			{ "INDUSTRY_TYPE", Types.VARCHAR },
			{ "FUNCTIONAL_AREA", Types.VARCHAR },
			{ "ROLE_CATEGORY", Types.VARCHAR },
			{ "EMPLOYMENT_TYPE", Types.VARCHAR },
			{ "LOCATION", Types.VARCHAR },
			{ "DATE", Types.TIMESTAMP },
			{ "STATUS", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("POSITION_ID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ADVERTISMENT_NUM", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("POSITION_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("DESCRIPTION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("EXPERIENCE_LEVEL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SALARY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("INDUSTRY_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FUNCTIONAL_AREA", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ROLE_CATEGORY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("EMPLOYMENT_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("LOCATION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("STATUS", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table cf_position_details (uuid_ VARCHAR(75) null,POSITION_ID LONG not null primary key,ADVERTISMENT_NUM VARCHAR(75) null,POSITION_NAME VARCHAR(75) null,DESCRIPTION VARCHAR(75) null,EXPERIENCE_LEVEL VARCHAR(75) null,SALARY VARCHAR(75) null,INDUSTRY_TYPE VARCHAR(75) null,FUNCTIONAL_AREA VARCHAR(75) null,ROLE_CATEGORY VARCHAR(75) null,EMPLOYMENT_TYPE VARCHAR(75) null,LOCATION VARCHAR(75) null,DATE DATE null,STATUS INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table cf_position_details";
	public static final String ORDER_BY_JPQL = " ORDER BY positionRegistration.POSITION_ID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY cf_position_details.POSITION_ID ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.crowd.funding.database.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.crowd.funding.database.model.PositionRegistration"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.crowd.funding.database.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.crowd.funding.database.model.PositionRegistration"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.crowd.funding.database.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.crowd.funding.database.model.PositionRegistration"),
			true);
	public static final long POSITION_ID_COLUMN_BITMASK = 1L;
	public static final long STATUS_COLUMN_BITMASK = 2L;
	public static final long UUID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static PositionRegistration toModel(
		PositionRegistrationSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		PositionRegistration model = new PositionRegistrationImpl();

		model.setUuid(soapModel.getUuid());
		model.setPOSITION_ID(soapModel.getPOSITION_ID());
		model.setADVERTISMENT_NUM(soapModel.getADVERTISMENT_NUM());
		model.setPOSITION_NAME(soapModel.getPOSITION_NAME());
		model.setDESCRIPTION(soapModel.getDESCRIPTION());
		model.setEXPERIENCE_LEVEL(soapModel.getEXPERIENCE_LEVEL());
		model.setSALARY(soapModel.getSALARY());
		model.setINDUSTRY_TYPE(soapModel.getINDUSTRY_TYPE());
		model.setFUNCTIONAL_AREA(soapModel.getFUNCTIONAL_AREA());
		model.setROLE_CATEGORY(soapModel.getROLE_CATEGORY());
		model.setEMPLOYMENT_TYPE(soapModel.getEMPLOYMENT_TYPE());
		model.setLOCATION(soapModel.getLOCATION());
		model.setDATE(soapModel.getDATE());
		model.setSTATUS(soapModel.getSTATUS());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<PositionRegistration> toModels(
		PositionRegistrationSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<PositionRegistration> models = new ArrayList<PositionRegistration>(soapModels.length);

		for (PositionRegistrationSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.crowd.funding.database.service.util.ServiceProps.get(
				"lock.expiration.time.com.crowd.funding.database.model.PositionRegistration"));

	public PositionRegistrationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _POSITION_ID;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPOSITION_ID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _POSITION_ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PositionRegistration.class;
	}

	@Override
	public String getModelClassName() {
		return PositionRegistration.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("POSITION_ID", getPOSITION_ID());
		attributes.put("ADVERTISMENT_NUM", getADVERTISMENT_NUM());
		attributes.put("POSITION_NAME", getPOSITION_NAME());
		attributes.put("DESCRIPTION", getDESCRIPTION());
		attributes.put("EXPERIENCE_LEVEL", getEXPERIENCE_LEVEL());
		attributes.put("SALARY", getSALARY());
		attributes.put("INDUSTRY_TYPE", getINDUSTRY_TYPE());
		attributes.put("FUNCTIONAL_AREA", getFUNCTIONAL_AREA());
		attributes.put("ROLE_CATEGORY", getROLE_CATEGORY());
		attributes.put("EMPLOYMENT_TYPE", getEMPLOYMENT_TYPE());
		attributes.put("LOCATION", getLOCATION());
		attributes.put("DATE", getDATE());
		attributes.put("STATUS", getSTATUS());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long POSITION_ID = (Long)attributes.get("POSITION_ID");

		if (POSITION_ID != null) {
			setPOSITION_ID(POSITION_ID);
		}

		String ADVERTISMENT_NUM = (String)attributes.get("ADVERTISMENT_NUM");

		if (ADVERTISMENT_NUM != null) {
			setADVERTISMENT_NUM(ADVERTISMENT_NUM);
		}

		String POSITION_NAME = (String)attributes.get("POSITION_NAME");

		if (POSITION_NAME != null) {
			setPOSITION_NAME(POSITION_NAME);
		}

		String DESCRIPTION = (String)attributes.get("DESCRIPTION");

		if (DESCRIPTION != null) {
			setDESCRIPTION(DESCRIPTION);
		}

		String EXPERIENCE_LEVEL = (String)attributes.get("EXPERIENCE_LEVEL");

		if (EXPERIENCE_LEVEL != null) {
			setEXPERIENCE_LEVEL(EXPERIENCE_LEVEL);
		}

		String SALARY = (String)attributes.get("SALARY");

		if (SALARY != null) {
			setSALARY(SALARY);
		}

		String INDUSTRY_TYPE = (String)attributes.get("INDUSTRY_TYPE");

		if (INDUSTRY_TYPE != null) {
			setINDUSTRY_TYPE(INDUSTRY_TYPE);
		}

		String FUNCTIONAL_AREA = (String)attributes.get("FUNCTIONAL_AREA");

		if (FUNCTIONAL_AREA != null) {
			setFUNCTIONAL_AREA(FUNCTIONAL_AREA);
		}

		String ROLE_CATEGORY = (String)attributes.get("ROLE_CATEGORY");

		if (ROLE_CATEGORY != null) {
			setROLE_CATEGORY(ROLE_CATEGORY);
		}

		String EMPLOYMENT_TYPE = (String)attributes.get("EMPLOYMENT_TYPE");

		if (EMPLOYMENT_TYPE != null) {
			setEMPLOYMENT_TYPE(EMPLOYMENT_TYPE);
		}

		String LOCATION = (String)attributes.get("LOCATION");

		if (LOCATION != null) {
			setLOCATION(LOCATION);
		}

		Date DATE = (Date)attributes.get("DATE");

		if (DATE != null) {
			setDATE(DATE);
		}

		Integer STATUS = (Integer)attributes.get("STATUS");

		if (STATUS != null) {
			setSTATUS(STATUS);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getPOSITION_ID() {
		return _POSITION_ID;
	}

	@Override
	public void setPOSITION_ID(long POSITION_ID) {
		_columnBitmask |= POSITION_ID_COLUMN_BITMASK;

		if (!_setOriginalPOSITION_ID) {
			_setOriginalPOSITION_ID = true;

			_originalPOSITION_ID = _POSITION_ID;
		}

		_POSITION_ID = POSITION_ID;
	}

	public long getOriginalPOSITION_ID() {
		return _originalPOSITION_ID;
	}

	@JSON
	@Override
	public String getADVERTISMENT_NUM() {
		if (_ADVERTISMENT_NUM == null) {
			return "";
		}
		else {
			return _ADVERTISMENT_NUM;
		}
	}

	@Override
	public void setADVERTISMENT_NUM(String ADVERTISMENT_NUM) {
		_ADVERTISMENT_NUM = ADVERTISMENT_NUM;
	}

	@JSON
	@Override
	public String getPOSITION_NAME() {
		if (_POSITION_NAME == null) {
			return "";
		}
		else {
			return _POSITION_NAME;
		}
	}

	@Override
	public void setPOSITION_NAME(String POSITION_NAME) {
		_POSITION_NAME = POSITION_NAME;
	}

	@JSON
	@Override
	public String getDESCRIPTION() {
		if (_DESCRIPTION == null) {
			return "";
		}
		else {
			return _DESCRIPTION;
		}
	}

	@Override
	public void setDESCRIPTION(String DESCRIPTION) {
		_DESCRIPTION = DESCRIPTION;
	}

	@JSON
	@Override
	public String getEXPERIENCE_LEVEL() {
		if (_EXPERIENCE_LEVEL == null) {
			return "";
		}
		else {
			return _EXPERIENCE_LEVEL;
		}
	}

	@Override
	public void setEXPERIENCE_LEVEL(String EXPERIENCE_LEVEL) {
		_EXPERIENCE_LEVEL = EXPERIENCE_LEVEL;
	}

	@JSON
	@Override
	public String getSALARY() {
		if (_SALARY == null) {
			return "";
		}
		else {
			return _SALARY;
		}
	}

	@Override
	public void setSALARY(String SALARY) {
		_SALARY = SALARY;
	}

	@JSON
	@Override
	public String getINDUSTRY_TYPE() {
		if (_INDUSTRY_TYPE == null) {
			return "";
		}
		else {
			return _INDUSTRY_TYPE;
		}
	}

	@Override
	public void setINDUSTRY_TYPE(String INDUSTRY_TYPE) {
		_INDUSTRY_TYPE = INDUSTRY_TYPE;
	}

	@JSON
	@Override
	public String getFUNCTIONAL_AREA() {
		if (_FUNCTIONAL_AREA == null) {
			return "";
		}
		else {
			return _FUNCTIONAL_AREA;
		}
	}

	@Override
	public void setFUNCTIONAL_AREA(String FUNCTIONAL_AREA) {
		_FUNCTIONAL_AREA = FUNCTIONAL_AREA;
	}

	@JSON
	@Override
	public String getROLE_CATEGORY() {
		if (_ROLE_CATEGORY == null) {
			return "";
		}
		else {
			return _ROLE_CATEGORY;
		}
	}

	@Override
	public void setROLE_CATEGORY(String ROLE_CATEGORY) {
		_ROLE_CATEGORY = ROLE_CATEGORY;
	}

	@JSON
	@Override
	public String getEMPLOYMENT_TYPE() {
		if (_EMPLOYMENT_TYPE == null) {
			return "";
		}
		else {
			return _EMPLOYMENT_TYPE;
		}
	}

	@Override
	public void setEMPLOYMENT_TYPE(String EMPLOYMENT_TYPE) {
		_EMPLOYMENT_TYPE = EMPLOYMENT_TYPE;
	}

	@JSON
	@Override
	public String getLOCATION() {
		if (_LOCATION == null) {
			return "";
		}
		else {
			return _LOCATION;
		}
	}

	@Override
	public void setLOCATION(String LOCATION) {
		_LOCATION = LOCATION;
	}

	@JSON
	@Override
	public Date getDATE() {
		return _DATE;
	}

	@Override
	public void setDATE(Date DATE) {
		_DATE = DATE;
	}

	@JSON
	@Override
	public int getSTATUS() {
		return _STATUS;
	}

	@Override
	public void setSTATUS(int STATUS) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalSTATUS) {
			_setOriginalSTATUS = true;

			_originalSTATUS = _STATUS;
		}

		_STATUS = STATUS;
	}

	public int getOriginalSTATUS() {
		return _originalSTATUS;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			PositionRegistration.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PositionRegistration toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PositionRegistration)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PositionRegistrationImpl positionRegistrationImpl = new PositionRegistrationImpl();

		positionRegistrationImpl.setUuid(getUuid());
		positionRegistrationImpl.setPOSITION_ID(getPOSITION_ID());
		positionRegistrationImpl.setADVERTISMENT_NUM(getADVERTISMENT_NUM());
		positionRegistrationImpl.setPOSITION_NAME(getPOSITION_NAME());
		positionRegistrationImpl.setDESCRIPTION(getDESCRIPTION());
		positionRegistrationImpl.setEXPERIENCE_LEVEL(getEXPERIENCE_LEVEL());
		positionRegistrationImpl.setSALARY(getSALARY());
		positionRegistrationImpl.setINDUSTRY_TYPE(getINDUSTRY_TYPE());
		positionRegistrationImpl.setFUNCTIONAL_AREA(getFUNCTIONAL_AREA());
		positionRegistrationImpl.setROLE_CATEGORY(getROLE_CATEGORY());
		positionRegistrationImpl.setEMPLOYMENT_TYPE(getEMPLOYMENT_TYPE());
		positionRegistrationImpl.setLOCATION(getLOCATION());
		positionRegistrationImpl.setDATE(getDATE());
		positionRegistrationImpl.setSTATUS(getSTATUS());

		positionRegistrationImpl.resetOriginalValues();

		return positionRegistrationImpl;
	}

	@Override
	public int compareTo(PositionRegistration positionRegistration) {
		long primaryKey = positionRegistration.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PositionRegistration)) {
			return false;
		}

		PositionRegistration positionRegistration = (PositionRegistration)obj;

		long primaryKey = positionRegistration.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		PositionRegistrationModelImpl positionRegistrationModelImpl = this;

		positionRegistrationModelImpl._originalUuid = positionRegistrationModelImpl._uuid;

		positionRegistrationModelImpl._originalPOSITION_ID = positionRegistrationModelImpl._POSITION_ID;

		positionRegistrationModelImpl._setOriginalPOSITION_ID = false;

		positionRegistrationModelImpl._originalSTATUS = positionRegistrationModelImpl._STATUS;

		positionRegistrationModelImpl._setOriginalSTATUS = false;

		positionRegistrationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PositionRegistration> toCacheModel() {
		PositionRegistrationCacheModel positionRegistrationCacheModel = new PositionRegistrationCacheModel();

		positionRegistrationCacheModel.uuid = getUuid();

		String uuid = positionRegistrationCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			positionRegistrationCacheModel.uuid = null;
		}

		positionRegistrationCacheModel.POSITION_ID = getPOSITION_ID();

		positionRegistrationCacheModel.ADVERTISMENT_NUM = getADVERTISMENT_NUM();

		String ADVERTISMENT_NUM = positionRegistrationCacheModel.ADVERTISMENT_NUM;

		if ((ADVERTISMENT_NUM != null) && (ADVERTISMENT_NUM.length() == 0)) {
			positionRegistrationCacheModel.ADVERTISMENT_NUM = null;
		}

		positionRegistrationCacheModel.POSITION_NAME = getPOSITION_NAME();

		String POSITION_NAME = positionRegistrationCacheModel.POSITION_NAME;

		if ((POSITION_NAME != null) && (POSITION_NAME.length() == 0)) {
			positionRegistrationCacheModel.POSITION_NAME = null;
		}

		positionRegistrationCacheModel.DESCRIPTION = getDESCRIPTION();

		String DESCRIPTION = positionRegistrationCacheModel.DESCRIPTION;

		if ((DESCRIPTION != null) && (DESCRIPTION.length() == 0)) {
			positionRegistrationCacheModel.DESCRIPTION = null;
		}

		positionRegistrationCacheModel.EXPERIENCE_LEVEL = getEXPERIENCE_LEVEL();

		String EXPERIENCE_LEVEL = positionRegistrationCacheModel.EXPERIENCE_LEVEL;

		if ((EXPERIENCE_LEVEL != null) && (EXPERIENCE_LEVEL.length() == 0)) {
			positionRegistrationCacheModel.EXPERIENCE_LEVEL = null;
		}

		positionRegistrationCacheModel.SALARY = getSALARY();

		String SALARY = positionRegistrationCacheModel.SALARY;

		if ((SALARY != null) && (SALARY.length() == 0)) {
			positionRegistrationCacheModel.SALARY = null;
		}

		positionRegistrationCacheModel.INDUSTRY_TYPE = getINDUSTRY_TYPE();

		String INDUSTRY_TYPE = positionRegistrationCacheModel.INDUSTRY_TYPE;

		if ((INDUSTRY_TYPE != null) && (INDUSTRY_TYPE.length() == 0)) {
			positionRegistrationCacheModel.INDUSTRY_TYPE = null;
		}

		positionRegistrationCacheModel.FUNCTIONAL_AREA = getFUNCTIONAL_AREA();

		String FUNCTIONAL_AREA = positionRegistrationCacheModel.FUNCTIONAL_AREA;

		if ((FUNCTIONAL_AREA != null) && (FUNCTIONAL_AREA.length() == 0)) {
			positionRegistrationCacheModel.FUNCTIONAL_AREA = null;
		}

		positionRegistrationCacheModel.ROLE_CATEGORY = getROLE_CATEGORY();

		String ROLE_CATEGORY = positionRegistrationCacheModel.ROLE_CATEGORY;

		if ((ROLE_CATEGORY != null) && (ROLE_CATEGORY.length() == 0)) {
			positionRegistrationCacheModel.ROLE_CATEGORY = null;
		}

		positionRegistrationCacheModel.EMPLOYMENT_TYPE = getEMPLOYMENT_TYPE();

		String EMPLOYMENT_TYPE = positionRegistrationCacheModel.EMPLOYMENT_TYPE;

		if ((EMPLOYMENT_TYPE != null) && (EMPLOYMENT_TYPE.length() == 0)) {
			positionRegistrationCacheModel.EMPLOYMENT_TYPE = null;
		}

		positionRegistrationCacheModel.LOCATION = getLOCATION();

		String LOCATION = positionRegistrationCacheModel.LOCATION;

		if ((LOCATION != null) && (LOCATION.length() == 0)) {
			positionRegistrationCacheModel.LOCATION = null;
		}

		Date DATE = getDATE();

		if (DATE != null) {
			positionRegistrationCacheModel.DATE = DATE.getTime();
		}
		else {
			positionRegistrationCacheModel.DATE = Long.MIN_VALUE;
		}

		positionRegistrationCacheModel.STATUS = getSTATUS();

		return positionRegistrationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", POSITION_ID=");
		sb.append(getPOSITION_ID());
		sb.append(", ADVERTISMENT_NUM=");
		sb.append(getADVERTISMENT_NUM());
		sb.append(", POSITION_NAME=");
		sb.append(getPOSITION_NAME());
		sb.append(", DESCRIPTION=");
		sb.append(getDESCRIPTION());
		sb.append(", EXPERIENCE_LEVEL=");
		sb.append(getEXPERIENCE_LEVEL());
		sb.append(", SALARY=");
		sb.append(getSALARY());
		sb.append(", INDUSTRY_TYPE=");
		sb.append(getINDUSTRY_TYPE());
		sb.append(", FUNCTIONAL_AREA=");
		sb.append(getFUNCTIONAL_AREA());
		sb.append(", ROLE_CATEGORY=");
		sb.append(getROLE_CATEGORY());
		sb.append(", EMPLOYMENT_TYPE=");
		sb.append(getEMPLOYMENT_TYPE());
		sb.append(", LOCATION=");
		sb.append(getLOCATION());
		sb.append(", DATE=");
		sb.append(getDATE());
		sb.append(", STATUS=");
		sb.append(getSTATUS());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.crowd.funding.database.model.PositionRegistration");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>POSITION_ID</column-name><column-value><![CDATA[");
		sb.append(getPOSITION_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ADVERTISMENT_NUM</column-name><column-value><![CDATA[");
		sb.append(getADVERTISMENT_NUM());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>POSITION_NAME</column-name><column-value><![CDATA[");
		sb.append(getPOSITION_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DESCRIPTION</column-name><column-value><![CDATA[");
		sb.append(getDESCRIPTION());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>EXPERIENCE_LEVEL</column-name><column-value><![CDATA[");
		sb.append(getEXPERIENCE_LEVEL());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SALARY</column-name><column-value><![CDATA[");
		sb.append(getSALARY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>INDUSTRY_TYPE</column-name><column-value><![CDATA[");
		sb.append(getINDUSTRY_TYPE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>FUNCTIONAL_AREA</column-name><column-value><![CDATA[");
		sb.append(getFUNCTIONAL_AREA());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ROLE_CATEGORY</column-name><column-value><![CDATA[");
		sb.append(getROLE_CATEGORY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>EMPLOYMENT_TYPE</column-name><column-value><![CDATA[");
		sb.append(getEMPLOYMENT_TYPE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LOCATION</column-name><column-value><![CDATA[");
		sb.append(getLOCATION());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DATE</column-name><column-value><![CDATA[");
		sb.append(getDATE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>STATUS</column-name><column-value><![CDATA[");
		sb.append(getSTATUS());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = PositionRegistration.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			PositionRegistration.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _POSITION_ID;
	private long _originalPOSITION_ID;
	private boolean _setOriginalPOSITION_ID;
	private String _ADVERTISMENT_NUM;
	private String _POSITION_NAME;
	private String _DESCRIPTION;
	private String _EXPERIENCE_LEVEL;
	private String _SALARY;
	private String _INDUSTRY_TYPE;
	private String _FUNCTIONAL_AREA;
	private String _ROLE_CATEGORY;
	private String _EMPLOYMENT_TYPE;
	private String _LOCATION;
	private Date _DATE;
	private int _STATUS;
	private int _originalSTATUS;
	private boolean _setOriginalSTATUS;
	private long _columnBitmask;
	private PositionRegistration _escapedModel;
}